import pygame
import os
import time
from level import Level
from screen import Screen
pygame.init()

size = width, height = 1400, 750
screen = pygame.display.set_mode(size)
os.environ['SDL_VIDEO_WINDOW_POS'] = "50, 50"
pygame.display.set_mode((101, 100))
pygame.display.set_mode(size)
running = True


wallist = [(2, 6), (2, 9), (2, 12), (2, 15), (3, 9), (3, 6), (3, 12), (3, 15), (4, 12), (4, 6), (4, 9), (4, 15),
                   (5, 6), (5, 9), (5, 12), (5, 15), (6, 6), (6, 12), (6, 15), (6, 9), (7, 1), (7, 2), (7, 3),
                   (7, 4), (7, 5), (7, 6), (7, 9), (7, 10), (7, 11), (7, 12), (7, 15), (7, 16), (7, 17), (7, 18),
                   (7, 19), (0, 7), (0, 8), (0, 14), (0, 13), (9, 4), (9, 5), (9, 16),
                   (10, 3), (9, 8), (9, 11), (10, 17), (11, 18), (10, 9), (11, 2), (10, 10), (12, 2), (12, 18)]
brwalls = [(13, 9), (13, 11), (13, 10), (14, 9), (14, 11)]
snowlist = [(5, 4), (4, 3), (6, 5), (6, 10), (6, 11), (6, 16), (9, 10), (10, 19), (9, 9)]
snowmanlist = [(1, 1), (1, 10), (1, 19), (9, 1), (9, 19), (11, 4), (11, 16), (4, 7), (4, 14)]


wallist2 = [(1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 10), (1, 11), (1, 12), (1, 13), (1, 15),
                   (1, 14), (1, 17), (1, 18), (2, 2), (2, 18), (3, 2), (3, 4), (3, 5), (3, 6), (3, 7), (3, 8),
                   (3, 9), (3, 10), (3, 12), (3, 13), (3, 14), (3, 15), (3, 16), (3, 18), (4, 2), (4, 4), (4, 18),
                   (4, 16), (5, 2), (5, 4), (5, 6), (5, 9), (5, 10), (5, 11), (55, 14),
                   (5, 16), (5, 18), (6, 2), (7, 4), (6, 9), (6, 10), (6, 11), (6, 14),
                   (6, 6), (6, 18), (7, 16), (7, 18), (8, 2), (8, 4), (8, 5), (8, 6), (8, 7), (8, 8), (8, 10), (8, 11),
                   (8, 12), (8, 13), (8, 14), (8, 16), (8, 18), (9, 2), (9, 16), (10, 2),
                   (10, 4), (10, 5), (10, 6), (10, 7), (10, 8), (10, 9), (10, 11), (10, 10),
                   (10, 13), (10, 18), (10, 16), (11, 2),
                   (11, 13), (11, 18), (12, 3), (12, 4), (12, 13), (12, 5), (12, 14), (12, 15),
                   (12, 17), (12, 18), (12, 16), (12, 2)]
snowmanlist2 = [(2, 3), (2, 11), (2, 17), (5, 7), (5, 13), (7, 9), (8, 3), (8, 17), (2, 7)]
brwalls2 = [(13, 9), (13, 11), (13, 10), (14, 9), (14, 11)]
snowlist2 = [(0, 0), (0, 4), (0, 14), (5, 3), (1, 1), (2, 1), (1, 0), (2, 0), (4, 7), (4, 14),
             (5, 17), (1, 19), (2, 19), (1, 9), (0, 1), (0, 19), (0, 20), (1, 20), (2, 20)]


wallist3 = [(2, 2), (2, 13), (2, 4), (2, 16), (2, 6), (2, 7), (2, 18), (2, 14), (3, 2), (3, 4), (3, 6), (3, 14),
            (3, 16), (3, 18), (4, 4), (4, 2), (4, 8), (4, 9), (4, 11), (4, 12), (4, 16), (4, 18), (5, 2), (3, 14),
            (3, 16), (3, 18), (4, 2), (4, 4), (4, 18), (5, 4), (5, 6), (5, 8), (5, 12), (5, 14), (5, 16), (5, 18),
            (6, 16), (6, 18), (6, 15), (6, 2), (6, 4), (6, 5), (6, 6),(6, 8), (6, 12), (6, 14), (12, 2), (12, 13),
            (12, 4), (12, 16), (12, 6), (12, 7), (12, 18), (12, 14), (11, 2), (11, 4), (11, 6), (11, 14), (11, 16),
            (11, 18), (10, 4), (10, 2), (10, 8), (10, 9), (10, 11), (10, 12), (10, 16), (10, 18), (9, 2), (11, 14),
            (11, 16), (11, 18), (10, 2), (10, 4), (10, 18), (9, 4), (9, 6), (9, 8), (9, 12), (9, 14), (9, 16), (9, 18),
            (8, 16), (8, 18), (8, 15), (8, 2), (8, 4), (8, 5), (8, 6), (8, 8), (8, 12), (8, 14)]
snowmanlist3 = [(0, 2), (0, 8), (0, 12), (0, 16), (3, 10), (4, 3), (4, 17), (5, 5), (5, 15)]
brwalls3 = [(13, 9), (13, 11), (13, 10), (14, 9), (14, 11), (0, 9), (0, 11), (0, 10), (7, 8), (7, 12), (6, 0), (8, 1),
            (7, 18), (6, 20), (4, 10), (10, 10)]
snowlist3 = [(0, 0), (0, 1), (1, 0), (1, 1), (2, 1), (2, 0), (0, 7), (2, 9), (3, 10), (1, 8), (2, 11), (1, 12), (0, 13),
             (9, 13), (1, 20), (2, 20), (9, 7), (0, 19), (0, 20), (1, 19), (2, 19),
             (8, 13), (6, 13), (5, 13), (8, 7), (6, 7), (5, 7), (8, 7), (7, 14), (7, 6)]

wallist4 = [(1, 2), (1, 3), (1, 4), (1, 5), (1, 13), (1, 7), (1, 8), (1, 9), (1, 10), (1, 11),
            (1, 12), (1, 15), (1, 16), (1, 17), (1, 18),
            (2, 2), (2, 7), (2, 13), (2, 18), (3, 2), (3, 7), (3, 13), (3, 18),
            (4, 2), (4, 3), (4, 5), (1, 13), (4, 7), (4, 10),
            (4, 15), (4, 17), (4, 18), (5, 2), (5, 5), (5, 10),
            (5, 15), (5, 18), (6, 2), (6, 5), (6, 10),
            (6, 15), (5, 18), (6, 8), (6, 9), (6, 11),
            (6, 12),
            (7, 15), (7, 5),
            (8, 2), (8, 6), (8, 14), (8, 5), (8, 13), (8, 7), (8, 8), (8, 4), (8, 16),
            (8, 12), (8, 15), (8, 18),
            (9, 2), (9, 18), (11, 18), (11, 18),
            (10, 2), (10, 6), (10, 14), (10, 5), (10, 13), (10, 7), (10, 8), (10, 9), (10, 10), (10, 11),
            (10, 12), (10, 15), (10, 18),
            (12, 2), (12, 6), (12, 14), (12, 5), (12, 13), (12, 7), (12, 8), (12, 3), (12, 4), (12, 17),
            (12, 12), (12, 16), (12, 18),
            ]
snowmanlist4 = [(0, 2), (0, 8), (0, 12), (0, 16), (3, 10), (3, 3), (3, 17), (5, 4), (5, 14)]
brwalls4 = [(13, 9), (13, 11), (13, 10), (14, 9), (14, 11)]
snowlist4 = [(3, 3), (3, 4), (3, 16), (3, 5), (3, 17), (3, 8), (3, 9), (3, 10), (3, 11),
             (3, 12), (3, 15), (2, 3), (2, 4), (2, 16), (2, 5), (2, 17), (2, 8), (2, 9), (2, 10), (2, 11),
             (2, 12), (2, 15)]

snowlist5 = [(j, i) for i in range(0, 21) for j in range(0, 15)]


class Game:
    def __init__(self):
        self.guess = 2
        self.end = False
        self.time = 0
        player = (0, 11 * 50, 36)
        base = (10 * 50, 14 * 50)
        self.levels = [Screen(self, screen, (),
                              (365, 459, 330, 111, (255, 255, 255), 'Начать игру'),
                              (724, 459, 330, 111, (255, 255, 255), 'Выход')),
                       Level(self, screen, wallist, brwalls, snowlist, snowmanlist, player, base),
                       Screen(self, screen, (("Первый уровень пройден", 400, 300, (250, 250, 0)),),
                              (365, 459, 330, 111, (255, 255, 255), 'Продолжить'),
                              (724, 459, 330, 111, (255, 255, 255), 'Выход')),
                       Level(self, screen, wallist2, brwalls2, snowlist2, snowmanlist2, player, base),
                       Screen(self, screen, (("Второй уровень пройден", 400, 300, (250, 250, 0)),),
                              (365, 459, 330, 111, (255, 255, 255), 'Продолжить'),
                              (724, 459, 330, 111, (255, 255, 255), 'Выход')),
                       Level(self, screen, wallist3, brwalls3, snowlist3, snowmanlist3, player, base),
                       Screen(self, screen, (("Третий уровень пройден", 400, 300, (250, 250, 0)),),
                              (365, 459, 330, 111, (255, 255, 255), 'Продолжить'),
                              (724, 459, 330, 111, (255, 255, 255), 'Выход')),
                       Level(self, screen, wallist4, brwalls4, snowlist4, snowmanlist4, player, base),
                       Screen(self, screen, (("Четвёртый уровень пройден", 400, 300, (250, 250, 0)),),
                              (365, 459, 330, 111, (255, 255, 255), 'Продолжить'),
                              (724, 459, 330, 111, (255, 255, 255), 'Выход')),
                       Level(self, screen, [], [], snowlist5, [], player, (1000, 1000)),
                       Screen(self, screen, (("Игра окончена! Вы победили", 400, 300, (250, 250, 0)),),
                              (365, 459, 330, 111, (255, 255, 255), 'В главное меню'),
                              (724, 459, 330, 111, (255, 255, 255), 'Выход')),
                       Screen(self, screen, (("Вы проиграли. Удачи в следующий раз", 400, 300, (250, 250, 0)),),
                              (365, 459, 330, 111, (255, 255, 255), 'В главное меню'),
                              (724, 459, 330, 111, (255, 255, 255), 'Выход'))]

    def exit(self):
        self.end = not self.end


root = Game()
while running:
    screen.fill(pygame.Color(4, 129, 158))
    root.levels[root.guess].player.render()
    root.levels[root.guess].gw.draw(screen)
    root.levels[root.guess].gs.draw(screen)
    root.levels[root.guess].gsm.draw(screen)
    root.levels[root.guess].gb.draw(screen)
    root.levels[root.guess].gplayer.draw(screen)
    root.levels[root.guess].gbase.draw(screen)
    root.levels[root.guess].other.draw(screen)
    root.levels[root.guess].render()
    root.levels[root.guess].base.render()
    if root.levels[root.guess].run:
        root.levels[root.guess].menu.render()
        for i in root.levels[root.guess].slist:
            i.render()
        for i in root.levels[root.guess].blist:
            i.render()
    for event in pygame.event.get():
        if event.type == pygame.MOUSEBUTTONUP:
            for i in root.levels[root.guess].btnlist:
                if event.pos[0] in range(i.rect[0], i.rect[0] + i.rect[2]) and \
                   event.pos[1] in range(i.rect[1], i.rect[1] + i.rect[3]):
                    i.effect()
        if event.type == pygame.QUIT:
            running = False
    if root.end:
        running = False
    time.sleep(0.01)
    pygame.display.flip()
pygame.quit()
